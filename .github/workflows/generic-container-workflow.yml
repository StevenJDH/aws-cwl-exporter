name: 'build'

on:
  push:
    # Only used for build stage.
    branches:
    - main
    paths-ignore:
    - '*.md'
    - '*.png'
    # Publish 1.2.3 and 'latest' tags as releases.
    tags:
    - '[0-9]+.[0-9]+.[0-9]+'
    - 'v[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches:
    - main
    paths-ignore:
    - '*.md'
    - '*.png'
    types: [opened, synchronize, reopened] # https://docs.github.com/en/free-pro-team@latest/actions/reference/events-that-trigger-workflows#pull_request

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        # Disabling shallow clone is recommended for improving relevancy.
        fetch-depth: 0

    - name: Prepare Environment
      id: prepare-env
      run: |
        NAME=$(basename -s .git "`git config --get remote.origin.url`")
        echo "::set-output name=repo-name::$NAME"
        echo "REPO_NAME=$NAME" >> $GITHUB_ENV

    - name: Build Test Image
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ./Dockerfile
        push: false
        load: true
        tags: ${{ steps.prepare-env.outputs.repo-name }}:test

    - name: Run Image Test
      run: |
        docker run --rm --entrypoint "/usr/local/bin/aws" $REPO_NAME:test --version

    - name: Upload Artifact
      if: github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-artifact@v3
      with:
        name: repo-src
        path: |
          ${{ github.workspace }}
          !.git/
          !.github/
          !*.md
        retention-days: 1

  push_to_registries:
    name: Deploy Containers
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    environment: prod
    if: github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/')
    needs: build

    steps:
    - name: Download Artifact
      uses: actions/download-artifact@v3
      with:
        name: repo-src

    - name: Generate Docker Metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        # List of container registry names to use for image tagging.
        # Everything will be automatically set to lowercase.
        images: |
          public.ecr.aws/${{ github.repository }},enable=true
          docker.io/${{ github.repository }},enable=true
          ghcr.io/${{ github.repository }},enable=true
        # Generates Docker tags based on the following events/attributes.
        tags: |
          type=ref,event=branch,enable=false
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=sha
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Login to AWS Public ECR
      uses: docker/login-action@v2
      with:
        registry: public.ecr.aws
        username: ${{ secrets.AWS_ACCESS_KEY_ID }}
        password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      env:
        # Must be us-east-1 for requesting authentication token.
        # Reference: https://docs.aws.amazon.com/AmazonECR/latest/public/getting-started-cli.html#cli-authenticate-registry
        AWS_REGION: us-east-1

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Login to GHCR
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build, Tag, and Push Image
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}